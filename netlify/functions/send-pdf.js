// netlify/functions/send-pdf.js

const sgMail = require("@sendgrid/mail");
sgMail.setApiKey(process.env.SENDGRID_API_KEY);

exports.handler = async (event) => {
  // Common CORS headers
  const CORS_HEADERS = {
    "Access-Control-Allow-Origin":  "*",
    "Access-Control-Allow-Headers": "Content-Type,x-api-key",
    "Access-Control-Allow-Methods": "OPTIONS,POST",
  };

  // Handle preflight CORS request
  if (event.httpMethod === "OPTIONS") {
    return {
      statusCode: 200,
      headers:    CORS_HEADERS,
      body:       "",
    };
  }

  // Verify your front-endâ€™s secret key
  if (event.headers["x-api-key"] !== process.env.FUNC_API_KEY) {
    return {
      statusCode: 401,
      headers:    CORS_HEADERS,
      body:       "Unauthorized",
    };
  }

  let payload;
  try {
    payload = JSON.parse(event.body);
  } catch (parseErr) {
    return {
      statusCode: 400,
      headers:    CORS_HEADERS,
      body:       "Invalid JSON payload",
    };
  }

  const { customer, pdfDataUri } = payload;
  if (!pdfDataUri || !customer) {
    return {
      statusCode: 400,
      headers:    CORS_HEADERS,
      body:       "Missing customer or pdfDataUri",
    };
  }

  // Strip off the "data:application/pdf;base64," prefix
  const base64 = pdfDataUri.split(",")[1];

  const msg = {
    to:    "your.team@muriphys.com",
    from:  "no-reply@muriphys.com",
    subject: `New PDF from ${customer.name || "Unknown"}`,
    text:    `PDF generated by ${customer.name} <${customer.email}>.`,
    attachments: [{
      content:     base64,
      filename:    "Muriphys_Project_Summary.pdf",
      type:        "application/pdf",
      disposition: "attachment",
    }],
  };

  try {
    await sgMail.send(msg);
    return {
      statusCode: 200,
      headers:    CORS_HEADERS,
      body:       JSON.stringify({ message: "Email sent" }),
    };
  } catch (err) {
    // Log full SendGrid error for debugging
    const sgErrors = err.response?.body?.errors;
    console.error("SendGrid errors:", sgErrors || err.message);

    return {
      statusCode: 500,
      headers:    CORS_HEADERS,
      body:       JSON.stringify({ errors: sgErrors || [err.message] }),
    };
  }
};

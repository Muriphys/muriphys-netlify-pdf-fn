// netlify/functions/send-pdf.js
const sgMail = require("@sendgrid/mail");
sgMail.setApiKey(process.env.SENDGRID_API_KEY);

exports.handler = async (event) => {
  // 1) Always return CORS headers
  const CORS_HEADERS = {
    "Access-Control-Allow-Origin":  "*",                        // or your Shopify domain
    "Access-Control-Allow-Headers": "Content-Type,x-api-key",
    "Access-Control-Allow-Methods": "OPTIONS,POST"
  };

  // 2) Handle the preflight OPTIONS request
  if (event.httpMethod === "OPTIONS") {
    return {
      statusCode: 200,
      headers:    CORS_HEADERS,
      body:       ""
    };
  }

  // 3) Now handle the real POST
  if (event.headers["x-api-key"] !== process.env.FUNC_API_KEY) {
    return {
      statusCode: 401,
      headers:    CORS_HEADERS,
      body:       "Unauthorized"
    };
  }

  try {
    const { customer, pdfDataUri } = JSON.parse(event.body);
    const base64 = pdfDataUri.split(",")[1];

    const msg = {
      to:           "your.team@muriphys.com",
      from:         "no-reply@muriphys.com",
      subject:      `New PDF from ${customer.name || "Unknown"}`,
      text:         `PDF generated by ${customer.name} <${customer.email}>.`,
      attachments: [{
        content:     base64,
        filename:    "Muriphys_Project_Summary.pdf",
        type:        "application/pdf",
        disposition: "attachment"
      }]
    };

    await sgMail.send(msg);
    return {
      statusCode: 200,
      headers:    CORS_HEADERS,
      body:       "Email sent"
    };

  } catch (err) {
    console.error("SendGrid error:", err);
    return {
      statusCode: 500,
      headers:    CORS_HEADERS,
      body:       "Failed to send email"
    };
  }
};